type Student {
  id: ID!
  name: String!
  task_answers: [TaskAnswer!]
}

input UpdateStudentInput {
  id: ID!
  name: String
}

input InsertStudentInput {
  name: String!
}

type Task {
  id: ID!
  title: String!
  description: String!
  answers: [TaskAnswer!]
}

input PaginationInput {
  offset: Int!
  limit: Int!
}

type PaginationResult {
  offset: Int!
  limit: Int!
  total: Int!
}

type TasksPaginationResult {
  pagination: PaginationResult!
  tasks: [Task!]!
}

type TaskAnswer {
  id: ID!
  content: String!
  timestamp: String!
  student: Student!
  task: Task!
  comments: [TaskAnswerComment!]
}

type TaskAnswerComment {
  id: ID!
  student: Student!
  task_answer: TaskAnswer!
  text: String!
  timestamp: String!
}

type Query {
  students: [Student!]!
  student(id: ID!): Student!
  tasks: [Task!]!
  tasks_pages(pagination: PaginationInput!): TasksPaginationResult
  tasks_feed(pagination: PaginationInput!): [Task!]!
  task(id: ID!): Task!
}

type Mutation {
  updateStudent(student: UpdateStudentInput!): Student!
  insertStudent(student: InsertStudentInput!): Student!
  deleteStudent(id: ID!): ID
}
